generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  username          String             @unique
  email             String             @unique
  password          String
  createdAt         DateTime           @default(now())
  translations      Translation[]
  savedTranslations SavedTranslation[]
}

model Translation {
  id                String             @id @default(uuid())
  original          String
  translated        String
  userId            String?
  createdAt         DateTime           @default(now())
  user              User?              @relation(fields: [userId], references: [id])
  slangMentions     SlangMention[]
  savedTranslations SavedTranslation[]
}

model SlangTerm {
  id        String         @id @default(uuid())
  term      String         @unique
  meaning   String
  example   String?
  origin    String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  mentions  SlangMention[]
}

model SlangMention {
  id            String      @id @default(uuid())
  slangTermId   String
  translationId String
  createdAt     DateTime    @default(now())
  slangTerm     SlangTerm   @relation(fields: [slangTermId], references: [id])
  translation   Translation @relation(fields: [translationId], references: [id])

  @@unique([slangTermId, translationId])
  @@index([createdAt])
  @@index([slangTermId, createdAt])
}

model SavedTranslation {
  id            String      @id @default(uuid())
  translationId String
  userId        String?
  savedAt       DateTime    @default(now())
  translation   Translation @relation(fields: [translationId], references: [id])
  user          User?       @relation(fields: [userId], references: [id])

  @@unique([translationId, userId])
  @@map("saved_translations")
}
